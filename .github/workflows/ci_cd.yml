name: CI/CD

on:
  push:
    branches:
      - '**'
    tags-ignore:
      - '**'
  pull_request:
  release:
    types:
      - published

jobs:

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - 3.8

    steps:

      - uses: actions/checkout@master
      - run: git fetch --prune --unshallow

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install sdist dependencies
        run: pip install wheel setuptools_scm cmake_build_extension

      - name: Create sdist
        run: python setup.py sdist

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz

  test_sdist:
    name: Test source distribution
    needs: [ build_sdist ]
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - 3.8

    steps:

      - uses: actions/checkout@master
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install build dependencies
        run: |
          wget http://packages.osrfoundation.org/gazebo.key -O - | sudo apt-key add -
          sudo apt-add-repository "deb http://packages.osrfoundation.org/gazebo/ubuntu-$CHANNEL `lsb_release -cs` main"
          sudo apt-get update
          sudo apt-get install ignition-$IGNITION_DISTRIBUTION libprotobuf17
        env:
          CHANNEL: stable
          IGNITION_DISTRIBUTION: dome

      - name: Install sdist
        run: pip -v install dist/*.tar.gz

      - name: Run tests
        run: pip install pytest && pytest tests

      - name: Valgrind
        if: failure()
        run: |
          sudo apt install valgrind
          pip install colour-valgrind
          colour-valgrind pytest tests

  upload_pypi:
    name: Publish to PyPI
    needs: [ test_sdist ]
    runs-on: ubuntu-20.04
    # Master branch produces pre-releases.
    # Tagged versions produce stable releases linked to GitHub releases.
    if: |
      github.repository == 'dic-iit/gazebo-scenario-plugins' &&
      ((github.event_name == 'release' && github.event.action == 'published') ||
       (github.event_name == 'push' && github.ref == 'refs/heads/master'))

    steps:

      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.pypi_password }}
          skip_existing: true
